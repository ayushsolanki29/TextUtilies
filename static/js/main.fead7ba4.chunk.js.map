{"version":3,"sources":["componets/Navbar.js","componets/TextForm.js","componets/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","mailIds","setMail_Ids","downloadTxtFile","element","document","file","Blob","URL","createObjectURL","download","showAlert","click","Fragment","style","color","heading","rows","onChange","event","target","value","autoFocus","backgroundColor","placeholder","class","data-tip","files","reader","FileReader","onload","result","readAsText","accept","newText","toUpperCase","toLowerCase","split","join","map","el","charAt","slice","repval","prompt","tobereplaced","RegExp","toreplace","replace","wordArr","filter","item","pos","indexOf","c","forEach","elements","includes","e","cursor","doc","jsPDF","pdfText","setFont","setFontSize","save","localStorage","setItem","getItem","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","getElementById","select","navigator","clipboard","writeText","index_es","multiline","trim","match","length","Alert","role","word","lower","Capitalize","App","setMode","alert","setAlert","message","setTimeout","aboutText","body","componets_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.fead7ba4.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n        </li> */}\r\n      </ul>\r\n      <div className=\"form-check form-switch\">\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">Dark Mode </label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport {jsPDF} from \"jspdf\";\r\n\r\n\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n   \r\n    const [text, setText] = useState('')\r\n    const handleUpClick = ()=>{\r\n      \r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n      }\r\n      const handleLowClick = ()=>{\r\n        \r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n    }\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to clipbord!\", \"success\");\r\n    }\r\n    const handleExtraSpaces = () => {\r\n     let newText = text.split(/[ ]+/);\r\n     setText(newText.join(\" \"))\r\n     props.showAlert(\"Extra spaces Removed!\", \"success\");\r\n    }\r\n    const handleCapitalize = () => {\r\n        let newText = text.split(\" \").map(el => el.charAt(0).toUpperCase() + el.slice(1)).join(\" \");\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Capitalize!\", \"success\");\r\n   }\r\n\r\n   const handleSenClick = ()=>{\r\n\r\n   let newText =\r\n  text.toLowerCase().replace(/(^\\s*\\w)/g, function(c){\r\n    return c.toUpperCase()});\r\n   setText(newText)\r\n   props.showAlert(\"Converted to sentenceCase!\", \"success\");\r\n  }\r\n\r\n    const replaceString=()=>{\r\n    let repval=prompt(\"Enter word to be replace : \")\r\n    let tobereplaced= new RegExp(repval,'g');\r\n\r\n    let toreplace=prompt(\"Enter word you want to replace with : \");\r\n    \r\n    let newText= text.replace(tobereplaced,toreplace);\r\n    setText(newText);\r\n    props.showAlert(\"word is Replaced !\", \"success\");\r\n   }\r\n\r\n\r\n  function handleDuplicates () {\r\n    let wordArr = text.split(\" \");\r\n    let newText = wordArr.filter((item, pos)=>{\r\n        return wordArr.indexOf(item) === pos;\r\n    })\r\n    newText = newText.join(\" \");\r\n    setText(newText);\r\n    props.showAlert(\"Dublicate word Removed!\", \"success\");\r\n    }\r\n    const [mailIds,setMail_Ids] = useState('');\r\n    const handleMailExtractor = ()=> {\r\n    const arr = text.split(\" \");\r\n    arr.forEach(elements => {\r\n    if(elements.includes('@') &&\r\n    elements.includes('.'))\r\n    {\r\n    setMail_Ids( mailIds + elements + \" \");\r\n    }\r\n    props.showAlert(\"Extrated Mail Below!\", \"success\");\r\n  });\r\n}\r\nconst handleDummy = (e) =>{\r\n  setText(\"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Porro, deleniti facere vel quis cupiditate molestias quae! Aliquid dolorum architecto iure. Similique ipsum repellendus numquam quae ducimus quibusdam aut voluptatum cupiditate?, Lorem ipsum dolor sit, amet consectetur adipisicing elit. Porro, deleniti facere vel quis cupiditate molestias quae! Aliquid dolorum architecto iure. Similique ipsum repellendus numquam quae ducimus quibusdam aut voluptatum cupiditate? Lorem ipsum dolor sit, amet consectetur adipisicing elit. Porro, deleniti facere vel quis cupiditate molestias quae! Aliquid dolorum architecto iure. Similique ipsum repellendus numquam quae ducimus quibusdam aut voluptatum cupiditate?\")\r\n  props.showAlert(\"Generate Sample Text!\", \"success\");\r\n}\r\n  \r\n  \r\n\r\n    const downloadTxtFile = () => {\r\n        const element = document.createElement(\"a\");\r\n        const file = new Blob([text], {\r\n          type: \"text/plain\"\r\n        });\r\n        element.href = URL.createObjectURL(file);\r\n        element.download = \"MyTextFile.txt\";\r\n        props.showAlert(\"Text File Downloaded!\", \"success\");\r\n      \r\n        element.click();\r\n      }\r\n      const downloadDocFile = () => {\r\n        const element = document.createElement(\"a\");\r\n        const file = new Blob([text], {\r\n          type: \"text/plain\"\r\n        });\r\n    element.href = URL.createObjectURL(file)\r\n    \r\n    element.download = \"MyDocFile.doc\";\r\n  \r\n    element.click();\r\n    props.showAlert(\"Word File Downloaded!\", \"success\");\r\n    }\r\n    const downloadExlFile = () => {\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([text], {\r\n      type: \"text/plain\"\r\n    });\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"MyExelFile.xls\";\r\n  \r\n    element.click();\r\n    props.showAlert(\"Excel File Downloaded!\", \"success\");\r\n    }\r\n   const downloadPdf=()=>{\r\n    const doc =new jsPDF(\"p\",\"pt\");\r\n    const pdfText = text;\r\n    doc.text(20 , 100 ,pdfText);\r\n    doc.setFont(\"karla\")\r\n    doc.setFontSize(\"1.5rem\")\r\n    doc.save(\"MyPdfFile.pdf\")\r\n    props.showAlert(\"PDF File Downloaded!\", \"success\");\r\n   }\r\n  \r\n     \r\n    const speak = () => {\r\n      let msg = new SpeechSynthesisUtterance();\r\n      msg.text = text;\r\n      window.speechSynthesis.speak(msg);\r\n      props.showAlert(\"Listen Your Text!\", \"success\");\r\n    }\r\n    const handleSaveClick = (e)=>{\r\n  \r\n        localStorage.setItem(\"Text\",text);\r\n        props.showAlert(\"Save on textBord\", \"success\");\r\n      }\r\n      const handleRetrieve = (e)=>{\r\n        let a =localStorage.getItem(\"Text\");\r\n        setText(a); \r\n      }\r\n      const readTxt = (event) => {\r\n        let file = event.target.files[0];\r\n        let reader = new FileReader();\r\n        reader.onload = function(event){\r\n            setText(event.target.result);\r\n        };\r\n        reader.readAsText(file);\r\n        props.showAlert(\"Text File Uploaded\", \"success\");\r\n    }\r\n\r\n    const handleClearClick = ()=>{\r\n        \r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Text is cleared\", \"success\");\r\n    }\r\n    const handleOnchange = (event)=>{\r\n       \r\n        setText(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        \r\n    <div className=\"mb-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n\r\n       <h1>{props.heading}</h1>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" onChange={handleOnchange} value={text} autoFocus style={{backgroundColor: props.mode==='dark'?'#343b41':'white',color:props.mode==='dark'?'white':'black'}} placeholder='Enter Your Text here'></textarea>\r\n            <div class=\"mb-3 my-2\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n  <label htmlFor=\"formFilesm\" class=\"form-label\" data-tip=\"Upload only Text and Doc files\" >Upload File For Text</label>\r\n  <input class=\"form-control form-control-sm\" onChange = {readTxt} accept=\"text/plain,doc\" type=\"file\" id=\"formFileSm\" style={{backgroundColor: props.mode==='dark'?'#343b41':'white',color:props.mode==='dark'?'white':'black'}} />\r\n        </div>\r\n            <button className=\"btn btn-primary my-2 mx-1\" onClick={handleUpClick}  data-tip=\"Uppercase Your Text like <br/> \r\n            SAMPLE\" >Uppercase</button>\r\n\r\n            <button className=\"btn btn-primary my-2 mx-1\"  onClick={handleLowClick}  data-tip=\"Lowercase Your Text like <br/> \r\n            sample\" >Lowercase</button>\r\n            <button className=\"btn btn-primary my-2 mx-1\"  onClick={handleExtraSpaces} data-tip=\"Remove  Extra Spaces From Your Text\" >Remove spaces</button>\r\n            <button className=\"btn btn-primary my-2 mx-1\"  onClick={handleCapitalize}  data-tip=\"Capitalize Your Text like <br/> \r\n            Sample\">Capitalize</button>\r\n            <button className=\"btn btn-primary my-2 mx-1\"  onClick={replaceString}  data-tip=\"Replace Word From Your text\">Replace Word</button>\r\n            <button className=\"btn btn-primary my-2 mx-1\"  onClick={handleDuplicates} data-tip=\"Remove Your Dublicate Words\" >Remove Duplicates</button>  \r\n            <button className=\"btn btn-primary my-2 mx-1\"  onClick={handleSenClick} data-tip=\"Sentence Your Text like <br/> \r\n            Sample\" >Sentence Case</button>  \r\n            <button className=\"btn btn-primary my-2 mx-1\"  onClick={handleMailExtractor}  data-tip=\"Last Extract Email from Your Text\">Mail Extract</button> \r\n            <button className=\"btn btn-primary my-2 mx-1\"  onClick={handleDummy} data-tip=\"Create Sample Text\" >Dummy Text</button> \r\n   \r\n    \r\n            <div class=\"btn-group\">\r\n  <button type=\"button\" class=\"btn btn-primary my-2 \" onClick={downloadTxtFile} data-tip=\"Download Text File\"> <i class=\"bi bi-file-earmark-arrow-down\"></i> Downlod File</button>\r\n  <button type=\"button\" class=\"btn btn-primary dropdown-toggle dropdown-toggle-split my-2\" data-tip=\"More Option For Dowload File\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"></button>\r\n  <ul class=\"dropdown-menu\" style={{cursor:\"pointer\"}}>\r\n    <li><a class=\"dropdown-item\" onClick={downloadDocFile} href=\"#\"> <i class=\"bi bi-file-earmark-word\"></i> DOCS</a></li>\r\n    <li><a class=\"dropdown-item\" onClick={downloadPdf} href=\"#\"> <i class=\"bi bi-file-earmark-ppt\"></i> PDF</a></li>\r\n    <li><a class=\"dropdown-item\" onClick={downloadExlFile} href=\"#\"> <i class=\"bi bi-file-earmark-spreadsheet\"></i> EXEL</a></li>\r\n    <li><hr class=\"dropdown-divider\"/></li>\r\n    <li><a class=\"dropdown-item\" onClick={downloadTxtFile} href=\"#\" > <i class=\"bi bi-file-earmark-font\"></i> TEXT</a></li>\r\n  </ul>\r\n            </div>\r\n        <br/>\r\n    \r\n    \r\n        <button type=\"submit\" onClick={handleSaveClick} className=\"btn btn-secondary my-2 mx-1 \" data-tip=\"Save Text On textbord \"><i class=\"bi bi-cloud-download\"></i></button>\r\n        <button type=\"submit\" onClick={handleRetrieve} className=\"btn btn-secondary my-2 \" data-tip=\"Word That is not saved will be Removed\"><i class=\"bi bi-backspace\"></i></button>\r\n        <button type=\"submit\" onClick={speak} className=\"btn btn-secondary my-2 mx-2\" data-tip=\"Listen to the entered word\"><i class=\"bi bi-volume-up-fill\"></i></button>\r\n\r\n\r\n            <button className=\"btn btn-secondary my-2 mx-1\"  onClick={handleCopy} data-tip=\"copy Text\">Copy</button>\r\n            <button className=\"btn btn-danger my-2 mx-1\"  onClick={handleClearClick} data-tip=\"Clear Text Box\" >Clear</button>\r\n        </div>\r\n            <ReactTooltip  multiline=\"true\" />\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h2>Your Text Summary</h2>\r\n            <p><b> {text.trim() === '' ? 0 : text.match(/\\S+/g).length}</b> words and <b> {text.replace(/\\s+/g, '').length} </b>characters</p>\r\n    \r\n           <p> <b> {0.08 * text.split(\" \").length}</b> Minutes to Read</p>\r\n           <p>\r\n           {text.split(/\\S+\\r\\n|\\r|\\n/).length} Paraghraphs</p>\r\n        <p>  <b>{text.replace(/ /g,\"\").length/text.split(\" \").length}</b> Characters per word</p>\r\n        <p> Mail ID :  {mailIds} </p>\r\n            <h3>Preview</h3>\r\n            <p> <i> {text.length ? text:\"Enter Something in the textbox above To preview it here\"}</i> </p>\r\n          \r\n            </div> \r\n    </>\r\n  )\r\n    }\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const Capitalize = (word)=>{\r\n\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n  props.Alert &&  <div className={`alert alert-${props.Alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  \r\n\r\n  <strong> <i class=\"bi bi-check2-circle\"></i> { Capitalize(props.Alert.type)}</strong> {props.Alert.msg}\r\n\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","\nimport './App.css';\nimport Navbar from './componets/Navbar';\nimport TextForm from './componets/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './componets/Alert';\n// import About from './componets/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n   const showAlert = (message, type)=>{\n    setAlert({\n      msg:message,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n   }\n  const toggleMode = ()=>{\n    if(mode === 'light') {\n      setMode ('dark' )\n      document.body.style.backgroundColor ='#343b41';\n      showAlert(\"Dark Mode is Activated\", \"success :\");\n      document.title = 'TextUtilies - Dark Mode';\n    } \n    else{\n      setMode ('light' )\n      document.body.style.backgroundColor ='white';\n      showAlert(\"Dark Mode is Deactivated\", \"success :\");  \n    }\n    \n  } \n   return (\n   <>\n{/* <Router> */}\n\n<Navbar title=\"Text Utilies\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} />\n<Alert Alert={alert}/>\n    <div className=\"container my-3\">\n          {/*\n    <Switch>\n           <Route exact path=\"/about\"> \n            <About mode={mode} />\n          \n          </Route>\n          <Route  exact path=\"/\"> */}\n           \n<TextForm showAlert={showAlert} heading=\"Write Your Text For Analyze\" mode={mode}/>\n          {/* </Route>\n        </Switch> */}\n\n\n    </div>\n{/* </Router> */}\n\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}